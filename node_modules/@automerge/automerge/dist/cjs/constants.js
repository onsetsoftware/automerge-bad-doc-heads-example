"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TEXT = exports.COUNTER = exports.F64 = exports.INT = exports.UINT = exports.FROZEN = exports.READ_ONLY = exports.OBJECT_ID = exports.TRACE = exports.HEADS = exports.STATE = void 0;
// Properties of the document root object
//const OPTIONS   = Symbol('_options')   // object containing options passed to init()
//const CACHE     = Symbol('_cache')     // map from objectId to immutable object
//export const STATE      = Symbol.for('_am_state')     // object containing metadata about current state (e.g. sequence numbers)
exports.STATE = Symbol.for('_am_meta'); // object containing metadata about current state (e.g. sequence numbers)
exports.HEADS = Symbol.for('_am_heads'); // object containing metadata about current state (e.g. sequence numbers)
exports.TRACE = Symbol.for('_am_trace'); // object containing metadata about current state (e.g. sequence numbers)
exports.OBJECT_ID = Symbol.for('_am_objectId'); // object containing metadata about current state (e.g. sequence numbers)
exports.READ_ONLY = Symbol.for('_am_readOnly'); // object containing metadata about current state (e.g. sequence numbers)
exports.FROZEN = Symbol.for('_am_frozen'); // object containing metadata about current state (e.g. sequence numbers)
exports.UINT = Symbol.for('_am_uint');
exports.INT = Symbol.for('_am_int');
exports.F64 = Symbol.for('_am_f64');
exports.COUNTER = Symbol.for('_am_counter');
exports.TEXT = Symbol.for('_am_text');
// Properties of all Automerge objects
//const OBJECT_ID = Symbol('_objectId')  // the object ID of the current object (string)
//const CONFLICTS = Symbol('_conflicts') // map or list (depending on object type) of conflicts
//const CHANGE    = Symbol('_change')    // the context object on proxy objects used in change callback
//const ELEM_IDS  = Symbol('_elemIds')   // list containing the element ID of each list element
